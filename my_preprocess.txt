#!/usr/bin/python

import pickle
import cPickle
import numpy

from sklearn import cross_validation
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.feature_selection import SelectPercentile, f_classif

words_file = "I:/Python 2.7/mywork/myfile.pkl"
authors_file="I:/Python 2.7/mywork/myfile2.pkl"
    

    ### the words (features) and authors (labels), already largely preprocessed
    ### this preprocessing will be repeated in the text learning mini-project
authors_file_handler = open(authors_file, "r")
authors = pickle.load(authors_file_handler)
   
authors_file_handler.close()

words_file_handler = open(words_file, "r")
word_data = cPickle.load(words_file_handler)
   
words_file_handler.close()

    ### test_size is the percentage of events assigned to the test set
    ### (remainder go into training)
features_train, features_test, labels_train, labels_test = cross_validation.train_test_split(word_data, authors, test_size=0.0, random_state=42)

print "features_train",features_train



t = open("input.txt","r")

lines = t.readlines()
t.close()
features_test=lines
print "features_test: ",features_test



    ### text vectorization--go from strings to lists of numbers
vectorizer = TfidfVectorizer(sublinear_tf=True, max_df=0.5,stop_words='english')
features_train_transformed = vectorizer.fit_transform(features_train)
features_test_transformed  = vectorizer.transform(features_test)



    ### feature selection, because text is super high dimensional and 
    ### can be really computationally chewy as a result
selector = SelectPercentile(f_classif, percentile=5)
selector.fit(features_train_transformed, labels_train)
features_train_transformed = selector.transform(features_train_transformed).toarray()
features_test_transformed  = selector.transform(features_test_transformed).toarray()

    ### info on the data
    
    
print "features_train_transformed",features_train_transformed
print "features_test_transformed",features_test_transformed
print "labels_train",labels_train